from collections import deque

def dfs(queue, check, start):
  check[start] = 1
  count = 0
  
  for i in graph[start]:
    queue.append(i)

  while queue:
    a = queue.popleft()
    if check[a] != 1:
      check[a] = 1
      for i in graph[a]:
        if check[i] != 1:
          queue.append(i)

  for i in check:
    if i == 1:
      count += 1

  return count-1

n = int(input())
m = int(input())

data = []

graph = [[] for _ in range(n+1)]

check = [0 for _ in range(n+1)]

for i in range(m):
  data.append(list(map(int, input().split())))

for i in data:
  graph[i[0]].append(i[1])
  graph[i[1]].append(i[0])
  
queue = deque()

print(dfs(queue, check, 1))


  
  
    
  
